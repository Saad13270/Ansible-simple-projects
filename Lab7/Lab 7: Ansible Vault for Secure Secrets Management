Lab 7: Ansible Vault for Secure Secrets Management**

Step 1: Create an Encrypted Variable File
    • Create an Ansible Vault encrypted variable file that will store your sensitive data. You can do this using the ansible-vault create command:
ansible-vault create sensitive_data.yml

Inside the sensitive_data.yml file, define your sensitive variables, for example:
yaml
db_password: my_secret_password
api_key: my_api_key

Step 2: Edit the Encrypted Variable File
ansible-vault edit sensitive_data.yml

Step 3: Create a Playbook That Uses Encrypted Variables
Now, you can create a playbook that uses the encrypted variables from the sensitive_data.yml file.
---
- name: Use Encrypted Variables
  hosts: localhost  # You can specify the target hosts as needed
  gather_facts: no  # Disable gathering facts

  tasks:
	- name: Load Encrypted Variables
  	include_vars:
    	file: sensitive_data.yml
    	name: sensitive_data  # Define a variable name to access the encrypted data

	- name: Display Encrypted Variables
  	debug:
    	var: sensitive_data

In this playbook:
    • include_vars task is used to load the encrypted variables from sensitive_data.yml into the sensitive_data variable.
    • debug task displays the content of the sensitive_data
Step 4: Run the Playbook
ansible-playbook my_playbook.yml --ask-vault-pass


To run the playbook, use the ansible-playbook command:



